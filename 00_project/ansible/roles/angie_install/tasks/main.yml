#SPDX-License-Identifier: MIT-0
---
# tasks file for angie_install
- name: Ensure required apt utils
  ansible.builtin.apt:
    name:
      - ca-certificates
      - gnupg
    state: present
    update_cache: true
- name: Add Angie APT repo key
  ansible.builtin.apt_key:
    url: https://angie.software/keys/angie-signing.gpg
    state: present
- name: Add Angie APT repository
  ansible.builtin.apt_repository:
    repo: "deb https://download.angie.software/angie/debian/12 bookworm main"
    state: present
    filename: "angie"
- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true
- name: Install Angie
  package:
    name: angie
    state: present

- name: Create SSL directory
  file:
    path: "{{ ssl_dir }}"
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Generate private key
  community.crypto.openssl_privatekey:
    path: "{{ cert_key_path }}"
    size: 2048
    type: RSA
    mode: "0600"

- name: Generate CSR
  community.crypto.openssl_csr:
    path: "{{ cert_csr_path }}"
    privatekey_path: "{{ cert_key_path }}"
    common_name: "{{ server_name }}"
    country_name: "{{ country }}"
    state_or_province_name: "{{ state }}"
    locality_name: "{{ locality }}"
    organization_name: "{{ org }}"
    subject_alt_name:
      - "DNS:{{ server_name }}"
      - "DNS:{{ inventory_hostname }}"
      - "IP:127.0.0.1"

- name: Create self-signed certificate
  community.crypto.x509_certificate:
    path: "{{ cert_crt_path }}"
    privatekey_path: "{{ cert_key_path }}"
    csr_path: "{{ cert_csr_path }}"
    provider: selfsigned
    selfsigned_not_after: "+397d"
    mode: "0644"
  notify: Reload angie

- name: Remove default site if present (to avoid conflicts)
  file:
    path: /etc/angie/http.d/default.conf
    state: absent
  notify: Reload angie

- name: Deploy reverse proxy config with HTTP->HTTPS redirect
  copy:
    dest: /etc/angie/http.d/reverse-proxy.conf
    owner: root
    group: root
    mode: "0644"
    content: |
      # HTTP: redirect all traffic to HTTPS
      server {
          listen 80 default_server;
          listen [::]:80 default_server;

          server_name {{ server_name }};
          return 301 https://$host$request_uri;
      }

      # HTTPS: reverse proxy
      server {
          listen 443 ssl;
          #listen [::]:443 ssl;
          server_name {{ server_name }};

          ssl_certificate     {{ cert_crt_path }};
          ssl_certificate_key {{ cert_key_path }};

          # Минимальные безопасные настройки TLS
          # ssl_session_timeout 1d;
          # ssl_session_cache   shared:SSL:10m;
          # ssl_protocols       TLSv1.2 TLSv1.3;

          # HSTS (опционально; закомментируйте при первом запуске)
          # add_header Strict-Transport-Security "max-age=31536000" always;

          # Прокси до вашего backend
          location / {
              proxy_pass https://192.168.90.3;
              proxy_ssl_server_name on;
              proxy_ssl_name seafile.lan;   # имя, которое прописано в Caddyfile
              proxy_ssl_verify off;

              proxy_set_header Host              $host;
              proxy_set_header X-Real-IP         $remote_addr;
              proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
          }
      }

      # map для корректного Upgrade заголовка (WebSocket и т.п.)
      map $http_upgrade $connection_upgrade {
          default upgrade;
          ''      close;
      }
  notify: Reload angie

- name: Enable and start angie
  service:
    name: angie
    state: started
    enabled: true
