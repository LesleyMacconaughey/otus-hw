# SPDX-License-Identifier: MIT-0
---
# tasks file for seafile-install
- name: Create working directory
  ansible.builtin.file:
    path: /opt/seafile
    state: directory
    mode: '0755'

# Upload configuration files
- name: Upload .env configuration
  ansible.builtin.copy:
    src: .env
    dest: /opt/seafile/.env
    mode: '0644'
- name: Upload seadoc docker-compose file
  ansible.builtin.copy:
    src: seadoc.yml
    dest: /opt/seafile/seadoc.yml
    mode: '0644'
- name: Upload seafile-server docker-compose file
  ansible.builtin.copy:
    src: seafile-server.yml
    dest: /opt/seafile/seafile-server.yml
    mode: '0644'
- name: Upload caddy docker-compose file
  ansible.builtin.copy:
    src: caddy.yml
    dest: /opt/seafile/caddy.yml
    mode: '0644'
# Create directory of Seafile data
- name: Create volume directory of Seafile data
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - /opt/seafile-data
    - /opt/seafile-mysql/db
    - /opt/notification-data
    - /opt/seafile-caddy/certs
- name: Create /opt/seafile-caddy/certs/cert.pem
  ansible.builtin.command:
    cmd: >
      openssl req -x509 -nodes -days 365
      -newkey rsa:2048
      -keyout ./key.pem
      -out ./cert.pem
      -subj "/C=RU/ST=St.Peter/L=St.Peter/O=MyCompany/OU=IT/CN={{ server_name }}"
    chdir: /opt/seafile-caddy/certs/

# - name: Pull Docker images
#   community.docker.docker_compose:
#     project_src: /opt/seafile
#     pull: true

# - name: Start Docker containers
#   community.docker.docker_compose:
#     project_src: /opt/seafile
#     build: true
#     state: present   # или `state: started`
#     restarted: true  # правильный параметр

- name: Run docker-compose to start Seafile services
  ansible.builtin.command:
    cmd: docker compose up -d
    chdir: /opt/seafile
#   register: seafile_compose_output
#   ignore_errors: yes
