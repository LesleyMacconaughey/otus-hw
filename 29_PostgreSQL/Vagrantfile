
# Описание параметров ВМ
MACHINES = {
  :node1 => {
    :box_name => "ubuntu/jammy64",
    :vm_name  => "node1",
    :cpus     => 2,
    :memory   => 1024,
    :ip       => "192.168.57.11",
  },
  :node2 => {
    :box_name => "ubuntu/jammy64",
    :vm_name  => "node2",
    :cpus     => 2,
    :memory   => 1024,
    :ip       => "192.168.57.12",
  },
  :barman => {
    :box_name => "ubuntu/jammy64",
    :vm_name  => "barman",
    :cpus     => 1,
    :memory   => 1024,
    :ip       => "192.168.57.13",
  },
}

Vagrant.configure("2") do |config|
  MACHINES.each do |boxname, boxconfig|
    config.vm.define boxname do |box|
      box.vm.box      = boxconfig[:box_name]
      box.vm.hostname = boxconfig[:vm_name]
      box.vm.network "private_network", ip: boxconfig[:ip]

      box.vm.provider "virtualbox" do |v|
        v.name   = boxconfig[:vm_name]
        v.memory = boxconfig[:memory]
        v.cpus   = boxconfig[:cpus]
      end

      # Установка vim и telnet на всех машинах
      box.vm.provision "shell", inline: <<-SHELL
        sudo apt-get update
        sudo apt-get install -y vim telnet
      SHELL


      # Установка PostgreSQL только на node1 и node2
      if ["node1", "node2"].include?(boxconfig[:vm_name])
        box.vm.provision "shell", inline: <<-SHELL
          sudo apt-get install -y postgresql postgresql-contrib
        SHELL
      end

      # Для barman запускаем ansible
    #   if boxconfig[:vm_name] == "barman"
    #     box.vm.provision "ansible" do |ansible|
    #       ansible.playbook          = "ansible/provision.yml"
    #       ansible.inventory_path    = "ansible/hosts"
    #       ansible.host_key_checking = false
    #       ansible.limit             = "all"
    #     end
    #   end
    end
  end
end